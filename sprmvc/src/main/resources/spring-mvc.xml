<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- <mvc:resources mapping="js/**" location="js/"/> <mvc:resources mapping="css/**" 
		location="css/"/> <mvc:resources mapping="images/**" location="images/"/> -->

	<!-- | The base-package indicates where components stored. Spring will scan 
		this | folder and find out the annotated beans and register it in Spring 
		container. -->
	<context:component-scan base-package="org.pub.sprmvc.action">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- auto convert request timestamp string to timestamp object -->
	<mvc:annotation-driven conversion-service="conversionService" />
	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="org.pub.sprmvc.converter.TimestampConverter"></bean>
			</list>
		</property>
	</bean>

	<!-- 指定View解析器，路径和后缀 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<bean class="org.pub.sprmvc.interceptor.GlobalInterceptor" />
		<mvc:interceptor>
			<mvc:mapping path="/order/**" />
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean class="org.pub.sprmvc.interceptor.LatencyWatchInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 全局异常处理 -->
	<!-- <bean id="exceptionHandler" class="org.pub.exception.DefaultExceptionHandler" 
		/> -->
</beans>
